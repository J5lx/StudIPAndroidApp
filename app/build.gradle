/*
 * Copyright (c) 2017 ELAN e.V.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the GNU Public License v3.0
 * which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/gpl.html
 */
// Production-Release versioning
def versionMajor = 1  // max. 9
def versionMinor = 3  // max. 99
def versionPatch = 7 // max. 99

// Beta- and Alpha-Release versioning
def versionMajorBeta = 1 // max. 9
def versionMinorBeta = 3 // max. 99
def versionPatchBeta = 5 // max. 99

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.fernandocejas.frodo'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'realm-android'

repositories {
  jcenter()
  maven { url 'https://jitpack.io' }
  maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
  maven { url 'https://maven.fabric.io/public' }
}

dependencies {
  def support = rootProject.ext.depsSupport;
  def code = rootProject.ext.depsCode;
  def test = rootProject.ext.depsTest;

  // Android Support Libs
  compile support.supportv4
  compile support.appcompat
  compile support.recyclerView
  compile support.design
  compile support.cardview
  compile support.annotations
  // API
  compile code.okHttp
  compile code.retrofit
  compile code.retrofitJackson
  compile code.retrofitRxJava
  compile code.jacksonDatabind
  compile code.jacksonAnnotations
  compile code.signpostOAuth
  compile code.signpostOkhttp
  // RxJava
  //TODO: Update rxjava and rxandroid to 2.x
  compile code.rxJava
  compile code.rxAndroid
  // Dependency injection
  compile code.dagger
  compile code.daggerAndroid
  apt code.daggerCompiler
  provided code.javaxAnnotation
  // MVP
  compile code.mosbyMvp
  compile code.mosbyViewState
  // UI
  compile code.butterknife
  apt code.butterknifeCompiler
  compile code.smoothCircularProgressbar
  compile code.sectionedrecyclerviewadapter
  compile code.circleimageview
  compile code.androidWeekView
  compile code.fabSpeedDial
  compile code.picasso
  compile code.picassoOkhttp
  // Logging
  compile code.timber
  compile code.okhttpLoggingInterceptor
  compile(code.crashlytics) {
    transitive = true;
  }
  // Instrumentation tests
  androidTestApt code.daggerCompiler
  androidTestCompile test.testRunner
  androidTestCompile test.testRules
  androidTestCompile support.annotations
  androidTestCompile test.espressoCore
  androidTestCompile test.espressoIntents
  androidTestCompile test.junit
  androidTestCompile test.mockitoAndroid
  androidTestCompile(test.mockito) {
    exclude module: 'hamcrest-core'
  }
  // Unit tests
  testCompile test.hamcrest
  testCompile test.hamcrestIntegration
  testCompile test.hamcrestLibrary
  testApt code.daggerCompiler
  testCompile(test.junit) {
    exclude module: 'hamcrest-core'
  }
  testCompile(test.mockito) {
    exclude module: 'hamcrest-core'
  }
}

android {
  compileSdkVersion rootProject.ext.compileSdkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion

  configurations.all {
    //Temp fix for conflict in androidTestCompile. DaggerCompiler and espresso-core import the
    // same lib in version 2.0.1 (Espresso-core) and 3.0.1 (Dagger)
    // TODO: check espresso for updated dependency and remove this fix
    resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.1'
  }

  // Testing option
  testBuildType "staging"

  signingConfigs {
    release
    debug {
      keyAlias 'android'
      keyPassword 'android'
      storeFile file('debug.keystore')
      storePassword 'android'
    }
  }
  if (rootProject.file("release.properties").exists()) {
    def props = new Properties()
    props.load(new FileInputStream(rootProject.file("release.properties")))

    android.signingConfigs.release.storeFile rootProject.file(props.getProperty("keyStore"))
    android.signingConfigs.release.storePassword props.getProperty("keyStorePassword")
    android.signingConfigs.release.keyAlias props.getProperty("keyAlias")
    android.signingConfigs.release.keyPassword props.getProperty("keyAliasPassword")
  }
  
  defaultConfig {
    applicationId "de.elanev.studip.android.app"
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion

    // Testing settings
    testApplicationId "de.elanev.studip.android.app.test"
    testHandleProfiling true
    testFunctionalTest true
    testInstrumentationRunner "de.elanev.studip.android.app.runner.MockTestRunner"
    testInstrumentationRunnerArguments disableAnalytics: 'true'

    // Set output file name based on versionName
    setProperty("archivesBaseName", "studip_mobil")

    vectorDrawables.useSupportLibrary = true
  }

  productFlavors {
    beta {
      versionCode versionMajorBeta * 10000 + versionMinorBeta * 100 + versionPatchBeta
      versionName "${versionMajorBeta}.${versionMinorBeta}.${versionPatchBeta}-beta"
    }

    production {
      versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
      versionName "${versionMajor}.${versionMinor}.${versionPatch}"
    }
  }

  buildTypes {
    debug {
      ext.enableCrashlytics = false
      versionNameSuffix '-DEBUG'
      debuggable = true
      testCoverageEnabled false
    }
    staging {
      ext.enableCrashlytics = false
      versionNameSuffix '-STAGING'
      debuggable = true
      testCoverageEnabled true
      signingConfig signingConfigs.debug
    }
    release {
      ext.enableCrashlytics = true
      versionNameSuffix '-RELEASE'
      debuggable = false
      signingConfig signingConfigs.release
      minifyEnabled = true
      shrinkResources = true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
    }
    applicationVariants.all { variant ->
      variant.outputs.each { output ->
        def file = output.outputFile
        output.outputFile = new File(file.parent, file.name.replace(".apk",
            "-" + variant.productFlavors.versionCode + ".apk"))
      }
    }
  }

  dexOptions {
    javaMaxHeapSize "2g" //specify the heap size for the dex process
  }
  lintOptions {
    abortOnError false
  }
  compileOptions {
    // Enable Java 8 SourceCode features
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  packagingOptions {
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/NOTICE.txt'
  }
}
