/*******************************************************************************
 * Copyright (c) 2013 ELAN e.V.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the GNU Public License v3.0
 * which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/gpl.html
 ******************************************************************************/
import java.text.SimpleDateFormat

def versionMajor = 0 //beta
def versionMinor = 6
def versionPatch = 13
def versionBuild = 1

buildscript {

    repositories {
        maven { url 'http://download.crashlytics.com/maven' }
    }
    dependencies {
        classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.+'
    }

}
apply plugin: 'android'
apply plugin: 'crashlytics'

repositories {
    maven { url 'http://download.crashlytics.com/maven' }
}

dependencies {

    compile 'com.android.support:support-v4:18.+'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.2.2'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.2.2'
    compile 'oauth.signpost:signpost-commonshttp4:1.2.1.2'
    compile 'oauth.signpost:oauth-signpost:1.2.1.2'
    compile 'oauth.signpost:signpost-core:1.2.1.2'
    compile 'com.actionbarsherlock:actionbarsherlock:4.4.0@aar'
    compile 'com.crashlytics.android:crashlytics:1.+'
    compile project(':libprojects:volley')

}

def buildTime() {

    def df = new SimpleDateFormat("yyyy-MM-dd HH:mm")
    df.setTimeZone(TimeZone.getTimeZone("CET"))
    return df.format(new Date())

}

android {

    compileSdkVersion 18
    buildToolsVersion "18.0.1"

    defaultConfig {

        minSdkVersion 10
        targetSdkVersion 18

        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        buildConfig """\
          public static final String BUILD_TIME = "${buildTime()}";
          public static final String VERSION_NAME = \\"${versionName}\\";
          public static final String VERSION_CODE = \\"${versionCode}\\";
        """

    }


    sourceSets {

        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        release {
            manifest.srcFile 'AndroidManifestRelease.xml'
        }

        instrumentTest.setRoot('tests')

    }

    buildTypes {

        debug {
            ext.enableCrashlytics = false;
            versionNameSuffix '-DEBUG'
        }

        release {
            versionNameSuffix '-RELEASE'
        }

        applicationVariants.all { variant ->
            def file = variant.outputFile
            variant.outputFile = new File(file.parent, file.name.replace(".apk", "-" + defaultConfig.versionName + ".apk"))
        }

    }
}